<!DOCTYPE html>
<html>
  <body>
    <canvas id="gameCanvas" width="400" height="400"></canvas>
    <div id="popup" style="display: none; position: absolute; background: white; border: 1px solid black;">
      <p>Color: red</p>
      <p>Size: medium</p>
    </div>
    <script>
      var canvas = document.getElementById('gameCanvas');
      var context = canvas.getContext('2d');
      var popup = document.getElementById('popup');

      var boardSize = 8;  // 8x8 board
      var tileSize = canvas.width / boardSize;

      var piece = { x: 0, y: 0 };  // piece starts in the top left corner

      function drawBoard() {
        for (var i = 0; i < boardSize; i++) {
          for (var j = 0; j < boardSize; j++) {
            context.fillStyle = (i + j) % 2 === 0 ? 'white' : 'green';
            context.fillRect(i * tileSize, j * tileSize, tileSize, tileSize);
          }
        }
      }

      function drawPiece() {
        context.fillStyle = 'red';
        context.beginPath();
        context.arc(
          piece.x * tileSize + tileSize / 2, 
          piece.y * tileSize + tileSize / 2, 
          tileSize / 2 - 4,  // leave a small border around the piece
          0, 2 * Math.PI
        );
        context.fill();
      }

      function draw() {
        drawBoard();
        drawPiece();
      }

      function isPieceHovered(x, y) {
        var dx = x - piece.x * tileSize - tileSize / 2;
        var dy = y - piece.y * tileSize - tileSize / 2;
        return Math.sqrt(dx * dx + dy * dy) < tileSize / 2;
      }

      canvas.addEventListener('mousemove', function(event) {
        var x = event.clientX - canvas.getBoundingClientRect().left;
        var y = event.clientY - canvas.getBoundingClientRect().top;

        if (isPieceHovered(x, y)) {
          popup.style.display = 'block';
          popup.style.left = (x + 15) + 'px';
          popup.style.top = (y + 15) + 'px';
        } else {
          popup.style.display = 'none';
        }
      });

      canvas.addEventListener('click', function(event) {
        var x = event.clientX - canvas.getBoundingClientRect().left;
        var y = event.clientY - canvas.getBoundingClientRect().top;
        piece.x = Math.floor(x / tileSize);
        piece.y = Math.floor(y / tileSize);
        draw();
      });

      window.addEventListener('keydown', function(event) {
        switch (event.key) {
          case 'ArrowLeft': piece.x = Math.max(piece.x - 1, 0); break;
          case 'ArrowRight': piece.x = Math.min(piece.x + 1, boardSize - 1); break;
          case 'ArrowUp': piece.y = Math.max(piece.y - 1, 0); break;
          case 'ArrowDown': piece.y = Math.min(piece.y + 1, boardSize - 1); break;
        }
        draw();
      });

      draw();
    </script>
  </body>
</html>
